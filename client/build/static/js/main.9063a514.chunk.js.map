{"version":3,"sources":["styles.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","toolbar","mixins","container","display","justifyContent","alignItems","marginBottom","spacing","layout","width","textAlign","marginLeft","marginRight","breakpoints","up","paper","marginTop","padding","App","classes","useStyles","useState","name","receiptno","price1","price2","userState","setUserState","handleChange","e","value","target","className","Paper","Typography","variant","gutterBottom","Grid","item","xs","sm","TextField","required","id","label","fullWidth","onChange","Button","color","onClick","axios","post","then","get","responseType","res","pdfBlob","Blob","data","type","saveAs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9063a514.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n   \n  },\n  layout: {\n    width: 'auto',\n   textAlign: 'center',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  \n  }\n}));","import React, { useState } from 'react'\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport useStyles from './styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nfunction App() {\n  const classes = useStyles();\n  const [userState, setUserState] = useState({\n    name: '',\n    receiptno: 0,\n    price1: 0,\n    price2: 0\n  })\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setUserState({\n      ...userState,\n      [e.target.name]: value\n    });\n  }\n  const createAndDownloadPdf = () => {\n    axios.post('https://dbm-server.herokuapp.com/create-pdf', userState)\n      .then(() => axios.get('https://dbm-server.herokuapp.com/fetch-pdf', { responseType: 'blob' }))\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\n\n        saveAs(pdfBlob, 'newPdf.pdf');\n      })\n  }\n  return (\n    <>\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" gutterBottom>\n            fill Details\n        </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"fullName\"\n                name=\"name\"\n                label=\"full name\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"receiptno\"\n                name=\"receiptno\"\n                label=\" receipt ID\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"price1\"\n                name=\"price1\"\n                label=\"Price 1\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"price2\"\n                name=\"price2\"\n                label=\"Price 2\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <br />\n          <Button variant=\"contained\" color=\"primary\" onClick={createAndDownloadPdf}>\n            Download pdf\n          </Button>\n        </Paper>\n      </main>\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}